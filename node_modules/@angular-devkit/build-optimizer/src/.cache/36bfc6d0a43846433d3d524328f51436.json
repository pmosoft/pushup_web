{"remainingRequest":"C:\\fframe\\workspace\\pushupstudy-web\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--8-1!C:\\fframe\\workspace\\pushupstudy-web\\node_modules\\@ng-bootstrap\\ng-bootstrap\\alert\\alert.js","dependencies":[{"path":"C:\\fframe\\workspace\\pushupstudy-web\\node_modules\\@ng-bootstrap\\ng-bootstrap\\alert\\alert.js","mtime":499162500000},{"path":"C:\\fframe\\workspace\\pushupstudy-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1527391761479},{"path":"C:\\fframe\\workspace\\pushupstudy-web\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1527226929000}],"contextDependencies":[],"result":["import { Component, Input, Output, EventEmitter, ChangeDetectionStrategy, } from '@angular/core';\nimport { NgbAlertConfig } from './alert-config';\n/**\n * Alerts can be used to provide feedback messages.\n */\nvar NgbAlert = /*@__PURE__*/ (function () {\n    function NgbAlert(config) {\n        /**\n           * An event emitted when the close button is clicked. This event has no payload. Only relevant for dismissible alerts.\n           */\n        this.close = new EventEmitter();\n        this.dismissible = config.dismissible;\n        this.type = config.type;\n    }\n    NgbAlert.prototype.closeHandler = function () { this.close.emit(null); };\n    return NgbAlert;\n}());\nexport { NgbAlert };\n//# sourceMappingURL=alert.js.map\n",null]}